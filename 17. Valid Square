class Solution {
public:
    bool validSquare(vector<int>& p1, vector<int>& p2, vector<int>& p3, vector<int>& p4) {
        
        vector<pair<int,int>> v;
        v.push_back({p1[0] , p1[1]});
        v.push_back({p2[0] , p2[1]});
        v.push_back({p3[0] , p3[1]});
        v.push_back({p4[0] , p4[1]}); 
        set<double> st;
        
        for(int i = 0; i < 4; i++){
            int x1 = v[i].first;
            int y1 = v[i].second;
            double dis = 0;
            for(int j = i+1; j < 4; j++){
                int x2 = v[j].first; 
                int y2 = v[j].second;

                dis = sqrt( (y2-y1)*(y2-y1) + (x2-x1)*(x2-x1) );
                st.insert(dis);
            }
        }

        if(st.size() != 2) return false;

    //return st.size() == 2;   //we can do this but , in test cases the points may coincide

        return !st.count(0);    //To avoid points that are coinciding
    }
};
