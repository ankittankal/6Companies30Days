class Solution {
public:
    
    void seive(vector<bool> &prime){
        for(int i = 2; i*i <= 1e6; i++){
            if(prime[i] == true){
                for(int j = i+i; j <= 1e6; j+=i){
                    prime[j] = false;
                }
            }
        }
    }

    vector<int> closestPrimes(int left, int right) {
        vector<bool> prime(1000000+1,true);
        prime[1] = false;
        prime[0] = false;
        seive(prime);
        vector<int> v;
        for(int i = left; i <= right; i++){
            if(prime[i]) v.push_back(i); 
        }

        int mini = right-left+1;
        int num1 = -1;
        int num2 = -1;
        if(v.size() <= 1) return {-1,-1};

        for(int i = 0; i < v.size()-1; i++){
            if(v[i+1]-v[i] < mini){
                num1 = v[i];
                num2 = v[i+1];
                mini = v[i+1]-v[i];
            }
        }

        return {num1,num2};
    }
};
