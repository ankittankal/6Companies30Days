//Important concept Using 2 Heaps

class Solution {
public:
    int findMaximizedCapital(int k, int w, vector<int>& profits, vector<int>& capital){
        int n = profits.size();
        int ans = 0;

        priority_queue <pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>> min_h;

        for(int i = 0; i < n; i++) min_h.push({capital[i],i});
        
        priority_queue<int> max_h;
        while(k > 0){
            while(min_h.size() > 0 and min_h.top().first <= w){
                max_h.push(profits[min_h.top().second]);
                min_h.pop();
            }
            if(max_h.size() > 0){
                w += max_h.top();
                max_h.pop();
            }
            k--;
        }

        return w;
    }
};
